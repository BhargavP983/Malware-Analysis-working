from static_analysis2 import static_analysis
import json
import yara
import io


# Yara Rules Comparison
def compare_with_yara(filepath, yara_rules):
    matches = []
    try:
        # Load Yara rules
        if isinstance(yara_rules, str):  # If it's a file path
            with open(yara_rules, 'r') as f:
                yara_rules = f.read()
        compiled_rules = yara.compile(source=yara_rules)

        # Perform static analysis
        analysis_results = static_analysis(filepath)

        # Convert each feature dictionary to a string
        features_str = [json.dumps(feature) for feature in analysis_results]

        # Join the features into a single string
        features_joined = '\n'.join(features_str)

        # Scan the data with the compiled rules
        matches_tmp = compiled_rules.match(data=features_joined)

        if matches_tmp:
            matches.extend([match["rule"] for match in matches_tmp])
    except Exception as e:
        print(f"Error during Yara matching: {e}")
    return matches


# Input folder path
folder_path = input("Enter the folder path containing executable files: ")

# Input folder path for YARA rules
rules_file = input("Enter the folder path containing YARA rules: ")

# Compare with Yara rules
matched_rules = compare_with_yara(folder_path, rules_file)
if matched_rules:
    print(f"Matched Yara Rules: {', '.join(matched_rules)}")
    print("**WARNING: Potential Malware Detected**")
else:
    print("No Yara rule matches found.")
